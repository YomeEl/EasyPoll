@{
    ViewData["Title"] = "Активный опрос";

    var activePoll = (EasyPoll.Models.PollModel)ViewData["ActivePoll"];
    var answers = activePoll.GetAnswers();
    var totalCount = activePoll.GetTotalAnswersCount();

    const string NO_DISPLAY = "display:none";

    string percentage(int cnt)
    {
        return $"{(100f * cnt / totalCount).ToString("F1")}%".Replace(',', '.');
    }

    var voted = (int)ViewData["Selected"] != -1;
}

<div class="question">
    @activePoll.Question
</div>
<br>

@{
    for (int i = 0; i < answers.Count; i++)
    {
        var answer = answers[i];
        var barStyle = "";
        var answerText = answer.Text;
        var answerHref = $"href=Poll?answer={i}";

        if (voted)
        {
            answerText += $" ({percentage(answer.Count)})";
            answerHref = "";
            barStyle = $"width:{(voted ? @percentage(answer.Count) : "100%")};";
            if ((int)ViewData["Selected"] == i)
            {
                barStyle += "background-color: #FF0000;";
            }
        }

    <div class="answer-box@(voted ? "" : "-active")">
        <label class="answer-text">@(i + 1). </label>
        @{
            if (voted)
            {
                <label class="answer-text" @answerHref>@answerText</label>
            }
            else
            {
                <a class="answer-text" @answerHref>@answerText</a>
            }
        }
        <div class="answer-bar" style="@(voted ? "" : NO_DISPLAY)">
            <div class="answer-bar-result" style="@barStyle"></div>
        </div>
    </div>
    }
}

<br>
<div class="question">Проголосовало: @totalCount</div>
<br>
<div class="btn-container">
    <div class="btn-common">
        <label class="btn-text" onclick="location.href='Authentification/Logout'">Выход</label>
    </div>
</div>